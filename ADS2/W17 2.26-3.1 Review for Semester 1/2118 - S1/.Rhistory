knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tinytex)
library(rmarkdown)
library(knitr)
library(tidyverse)
library(cowplot)
setwd("C:\\Users\\Lenovo\\Desktop\\2118")
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
head(data1)
head(data2)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
data1$patient_ID$levels
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
levels(data1$patient_ID)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
levels(data2$patient_ID)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# levels(data2$patient_ID)
data1$patient_ID == data2$patient_ID
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
data1 = as.ordered(data1)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
data1 = as.ordered(data1)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# library(dplyr)
# levels(data2$patient_ID)
data1 = data1[order(data1$patient_ID)]
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# library(dplyr)
# levels(data2$patient_ID)
data1 = data1[order(data1)]
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# library(dplyr)
# levels(data2$patient_ID)
data1 = data1[order(data1$patient_ID)]
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# library(dplyr)
# levels(data2$patient_ID)
data1 = data1[order(data1$patient_ID),]
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# library(dplyr)
# levels(data2$patient_ID)
data1 = data1[order(data1$patient_ID), ]
data2 = data2[order(data1$patient_ID), ]
data1$patient_ID == data2$patient_ID
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# library(dplyr)
# levels(data2$patient_ID)
data1 = data1[order(data1$patient_ID), ]
data2 = data2[order(data1$patient_ID), ]
data1$patient_ID
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# library(dplyr)
# levels(data2$patient_ID)
data1 = data1[order(data1$patient_ID), ]
data2 = data2[order(data1$patient_ID), ]
data1$patient_ID
data2$patient_ID
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
summary(data1)
# library(dplyr)
# levels(data2$patient_ID)
data1 = data1[order(data1$patient_ID), ]
data2 = data2[order(data1$patient_ID), ]
data1$patient_ID
data2$patient_ID
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
summary(data1)
summary(data2)
# library(dplyr)
# levels(data2$patient_ID)
data1 = data1[order(data1$patient_ID), ]
data2 = data2[order(data1$patient_ID), ]
data1$patient_ID
data2$patient_ID
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
summary(data1)
summary(data2)
# library(dplyr)
# levels(data2$patient_ID)
sort(data1)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
summary(data1)
summary(data2)
# library(dplyr)
# levels(data2$patient_ID)
sort(data1,data1$patient_ID)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
summary(data1)
summary(data2)
# library(dplyr)
# levels(data2$patient_ID)
arrange(data1,data1$patient_ID)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
summary(data1)
summary(data2)
# library(dplyr)
# levels(data2$patient_ID)
data1 = arrange(data1,data1$patient_ID)
data2 = arrange(data2,data2$patient_ID)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# summary(data1)
# summary(data2)
# library(dplyr)
# levels(data2$patient_ID)
data1 = arrange(data1,data1$patient_ID)
data2 = arrange(data2,data2$patient_ID)
data1$patient_ID == data2$patient_ID
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# summary(data1)
# summary(data2)
# library(dplyr)
# levels(data2$patient_ID)
data1 = arrange(data1,data1$patient_ID)
data2 = arrange(data2,data2$patient_ID)
# data1$patient_ID == data2$patient_ID
data = cbind(data1, data2$AIS_after)
head(data)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# summary(data1)
# summary(data2)
# library(dplyr)
# levels(data2$patient_ID)
data1 = arrange(data1,data1$patient_ID)
data2 = arrange(data2,data2$patient_ID)
# data1$patient_ID == data2$patient_ID
data = cbind(data1, data2$AIS_after)
names(data)[3] = "AIS_after"
head(data)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# summary(data1)
# summary(data2)
# library(dplyr)
# levels(data2$patient_ID)
data1 = arrange(data1,data1$patient_ID)
data2 = arrange(data2,data2$patient_ID)
# data1$patient_ID == data2$patient_ID
data = cbind(data1, data2$AIS_after)
names(data)[3] = "AIS_after"
# head(data)
anyNA(data)
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# summary(data1)
# summary(data2)
# library(dplyr)
# levels(data2$patient_ID)
data1 = arrange(data1,data1$patient_ID)
data2 = arrange(data2,data2$patient_ID)
# data1$patient_ID == data2$patient_ID
data = cbind(data1, data2$AIS_after)
names(data)[3] = "AIS_after"
# head(data)
anyNA(data)
which(duplicated(data))
anyNA(data)
which(duplicated(data))
idx1= which(duplicated(data))
idx2= which(duplicated(data, fromLast = T))
data[c(idx1, idx2),  ]
idx1 = which(duplicated(data))
idx2 = which(duplicated(data, fromLast = T))
idx1
# data[c(idx1, idx2),  ]
data = data[-idx1, ]
idx1 = which(duplicated(data))
idx2 = which(duplicated(data, fromLast = T))
length(idx1)
# data[c(idx1, idx2),  ]
data = data[-idx1, ]
idx1 = which(duplicated(data))
idx2 = which(duplicated(data, fromLast = T))
idx1
# data[c(idx1, idx2),  ]
data = data[-idx1, ]
idx1 = which(duplicated(data))
idx2 = which(duplicated(data, fromLast = T))
idx1
# data[c(idx1, idx2),  ]
data = data[-idx1, ]
idx1 = which(duplicated(data))
idx2 = which(duplicated(data, fromLast = T))
idx1
# data[c(idx1, idx2),  ]
data = data[-idx1, ]
data1 = read.csv("SCI_before.csv")
data2 = read.csv("SCI_after.csv")
# head(data1)
# head(data2)
data1$patient_ID = as.factor(data1$patient_ID)
# levels(data1$patient_ID)
data2$patient_ID = as.factor(data2$patient_ID)
# summary(data1)
# summary(data2)
# library(dplyr)
# levels(data2$patient_ID)
data1 = arrange(data1,data1$patient_ID)
data2 = arrange(data2,data2$patient_ID)
# data1$patient_ID == data2$patient_ID
data = cbind(data1, data2$AIS_after)
names(data)[3] = "AIS_after"
# head(data)
idx1 = which(duplicated(data))
idx2 = which(duplicated(data, fromLast = T))
idx1
# data[c(idx1, idx2),  ]
data = data[-idx1, ]
summary(data)
# summary(data)
data$AIS_before = as.factor(data$AIS_before)
data$AIS_after = as.factor(data$AIS_after)
View(data)
View(data)
g3 = ggplot(data = data,
mapping = aes(x = patent_ID, y = AIS_before))
g3 = g3 + geom_bar(stat="identity", fill = "orange")
g3 = ggplot(data = data,
mapping = aes(x = patent_ID, y = AIS_before))
g3 = g3 + geom_bar(stat="identity", fill = "orange")
g3
hist(data$AIS_before, xlab = "before time (s)")
g3 = ggplot(data = data,
mapping = aes(x = AIS_before))
g3 = g3 + geom_bar(stat="identity", fill = "orange")
g3
g3 = ggplot(data = data,
mapping = aes(x = AIS_before))
g3 = g3 + geom_bar(fill = "orange")
g3
g3.1 = ggplot(data = data,
mapping = aes(x = AIS_before))
g3.1 = g3.1 + geom_bar(fill = "orange")
g3.1
g3.2 = ggplot(data = data,
mapping = aes(x = AIS_before))
g3.2 = g3.2 + geom_bar(fill = "purple")
g3.2
g3.1 = ggplot(data = data,
mapping = aes(x = AIS_before))
g3.1 = g3.1 + geom_bar(fill = "orange")
g3.1
g3.2 = ggplot(data = data,
mapping = aes(x = AIS_after))
g3.2 = g3.2 + geom_bar(fill = "purple")
g3.2
sc = c(0,25,50,75,100)
a = c()
for(i in 1:nrow(data)){
x=data[i,"AIS"])
sc = c(0,25,50,75,100)
a = c()
for(i in 1:nrow(data)){
x=data[i,"AIS_before"]
}
sc = c(0,25,50,75,100)
a = c()
for(i in 1:nrow(data)){
x=data[i,"AIS_before"]
as.numeric(as.character(x)-'A')
}
a = c()
for(i in 1:nrow(data)){
x=data[i,"AIS_before"]
if(x=="A") t=0
if(x=="B") t=25
if(x=="C") t=50
if(x=="D") t=75
if(x=="E") t=100
a=c(a,t)
}
a = c()
for(i in 1:nrow(data)){
x=data[i,"AIS_before"]
if(x=="A") t=0
if(x=="B") t=25
if(x=="C") t=50
if(x=="D") t=75
if(x=="E") t=100
a=c(a,t)
a
}
a = c()
for(i in 1:nrow(data)){
x=data[i,"AIS_before"]
if(x=="A") t=0
if(x=="B") t=25
if(x=="C") t=50
if(x=="D") t=75
if(x=="E") t=100
a=c(a,t)
print(a)
}
a = c()
for(i in 1:nrow(data)){
x=data[i,"AIS_before"]
if(x=="A") t=0
if(x=="B") t=25
if(x=="C") t=50
if(x=="D") t=75
if(x=="E") t=100
a=c(a,t)
}
print(a)
a = c()
for (i in 1:nrow(data)) {
x = data[i, "AIS_before"]
if (x == "A")
t = 0
if (x == "B")
t = 25
if (x == "C")
t = 50
if (x == "D")
t = 75
if (x == "E")
t = 100
a = c(a, t)
}
#print(a)
b = c()
for (i in 1:nrow(data)) {
x = data[i, "AIS_after"]
if (x == "A")
t = 0
if (x == "B")
t = 25
if (x == "C")
t = 50
if (x == "D")
t = 75
if (x == "E")
t = 100
b = c(b, t)
}
wilcox.test(a, b, alternative = 'less', paired = T)
mean(b-a)/sd(b-a)
