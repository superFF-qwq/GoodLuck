df = data.frame(pd1 = pd1, pd2 = pd2, bf = pd1/pd2)
df = df %>%
mutate(df = ifelse(df == "inf", 10, bf))
df
df = data.frame(pd1 = pd1, pd2 = pd2, bf = pd1/pd2)
df = df %>%
mutate(bf = ifelse(bf == "inf", 10, bf))
df
pd1 = seq(0.1, 1, by = 0.1)
pd2 = 1 - pd1
pd1 = seq(0.1, 1, by = 0.1)
pd2 = 1 - pd1
pd1
pd2
df = data.frame(pd1 = pd1, pd2 = pd2, bf = pd1/pd2)
df = df %>%
mutate(bf = ifelse(bf == "inf", 10, bf))
df
df
df = df %>%
mutate(bf = ifelse(bf == "Inf", 10, bf))
df
# summary(df)
# df
ggplot(df, mapping = aes(x = pd1, y = pd2, size = bf, color = bf)) +
geom_point(alpha = 0.7) +
scale_size(range = c(0, 10))
# summary(df)
# df
ggplot(df, mapping = aes(x = pd1, y = pd2, size = bf, color = bf)) +
geom_point(alpha = 0.7) +
scale_size(range = c(0, 10)) +
labs(x = 'P(DATA | H1)', y = 'P(DATA | H2)'))
# summary(df)
# df
ggplot(df, mapping = aes(x = pd1, y = pd2, size = bf, color = bf)) +
geom_point(alpha = 0.7) +
scale_size(range = c(0, 10)) +
labs(x = 'P(DATA | H1)', y = 'P(DATA | H2)')
# summary(df)
# df
ggplot(df, mapping = aes(x = pd1, y = pd2, size = bf, color = bf)) +
geom_point(alpha = 0.7) +
scale_size(range = c(0, 10)) +
labs(x = 'P(DATA | H1)', y = 'P(DATA | H2)',
size = "Bayes Factor", color = "")
ggplot(df, mapping = aes(x = pd1, y = pd2)) +
geom_point(alpha = 0.7) +
labs(x = 'P(DATA | H1)', y = 'P(DATA | H2)',
size = "Bayes Factor", color = "")
ggplot(df, mapping = aes(x = pd1, y = pd2)) +
theme_classic() +
geom_point(alpha = 0.7) +
labs(x = 'P(DATA | H1)', y = 'P(DATA | H2)',
size = "Bayes Factor", color = "")
df = df %>%
mutate(bf = ifelse(bf == "Inf", 10, bf))
df
ggplot(df, mapping = aes(x = pd1, y = pd2)) +
theme_classic() +
geom_point(size = 4, alpha = 0.2) +
labs(x = 'P(DATA | H1)', y = 'P(DATA | H2)',
size = "Bayes Factor", color = "")
ggplot(df, mapping = aes(x = pd1, y = pd2)) +
theme_classic() +
geom_point(size = 4, alpha = 0.2) +
geom_line(aes(color = bf))
ggplot(df, mapping = aes(x = pd1, y = pd2)) +
theme_classic() +
geom_point(size = 4, alpha = 0.2) +
geom_line(aes(color = bf)) +
labs(x = 'P(DATA | H1)', y = 'P(DATA | H2)',
size = "Bayes Factor", color = "")
ggplot(df, mapping = aes(x = pd1, y = pd2)) +
theme_classic() +
geom_point(size = 4, alpha = 0.2) +
geom_line(aes(color = bf), size = 1) +
labs(x = 'P(DATA | H1)', y = 'P(DATA | H2)',
size = "Bayes Factor", color = "")
labs(x = 'P(DATA | H1)', y = 'P(DATA | H2)',
color = "Bayes Factor")
ggplot(df, mapping = aes(x = pd1, y = pd2)) +
theme_classic() +
geom_point(size = 4, alpha = 0.2) +
geom_line(aes(color = bf), size = 1) +
scale_color_gradient(low = "orange", high = "darkred") +
labs(x = 'P(DATA | H1)', y = 'P(DATA | H2)',
color = "Bayes Factor")
ggplot(df, mapping = aes(x = pd1, y = pd2)) +
theme_classic() +
geom_point(size = 4, alpha = 0.2) +
geom_line(aes(color = bf), size = 1) +
scale_color_gradient(low = "orange", high = "darkred") + # , name = ""
labs(x = 'P(DATA | H1)', y = 'P(DATA | H2)',
color = "Bayes Factor")
p2 = p3 = p4 = p5 = 0.01
p6 = 0
p1 = 1 - p2 - p3 - p4 - p5 - p6
# p(D) = sigma p(D|Hi) * p(Hi)
pd = pd1*p1 + pd2*p2 + pd3*p3 + pd4*p4 + pd5*p5 + pd6*p6
pd1 = dbinom(7, size = 20, prob = 1/6)
# p(D|H2)
pd2 = dbinom(7, size = 20, prob = 2/6)
# p(D|H3)
pd3 = dbinom(7, size = 20, prob = 3/6)
# p(D|H4)
pd4 = dbinom(7, size = 20, prob = 4/6)
# p(D|H5)
pd5 = dbinom(7, size = 20, prob = 5/6)
# p(D|H6)
pd6 = dbinom(7, size = 20, prob = 6/6)
pd1
pd2
pd3
pd4
pd5
pd6
which.max(c(pd1,pd2,pd3,pd4,pd5,pd6))
## the practical std said that the priors
## are the following p(H1) = 0.96 P(H2) = p(H3) = p(H4) = p(H5) = 0.01
## Thoretically, p(Hi) = priors, these are designed by yourself
p2 = p3 = p4 = p5 = 0.01
p6 = 0
p1 = 1 - p2 - p3 - p4 - p5 - p6
# p(D) = sigma p(D|Hi) * p(Hi)
pd = pd1*p1 + pd2*p2 + pd3*p3 + pd4*p4 + pd5*p5 + pd6*p6
pd
# p(H1|D) = p(D|H1) * p(H1) / p(D)
p1d = pd1*p1/pd
p2d = pd2*p2/pd
p3d = pd3*p3/pd
p4d = pd4*p4/pd
p5d = pd5*p5/pd
p6d = pd6*p6/pd
p1d
p2d
p3d
p4d
p5d
p6d
which.max(c(p1d,p2d,p3d,p4d,p5d,p6d))
p2 = p3 = p4 = p5 = 0.2
p6 = 0
p1 = 1 - p2 - p3 - p4 - p5 - p6
# p(D) = sigma p(D|Hi) * p(Hi)
pd = pd1*p1 + pd2*p2 + pd3*p3 + pd4*p4 + pd5*p5 + pd6*p6
pd
# p(H1|D) = p(D|H1) * p(H1) / p(D)
p1d = pd1*p1/pd
p2d = pd2*p2/pd
p3d = pd3*p3/pd
p4d = pd4*p4/pd
p5d = pd5*p5/pd
p6d = pd6*p6/pd
p1d
p2d
p3d
p4d
p5d
p6d
which.max(c(p1d,p2d,p3d,p4d,p5d,p6d))
# p(D|H1) = 0.95
# p(D|H2) = 0.2
# p(H1) = 0.222
# p(H2) = 1 - 0.222
1 - 0.222
# p(D) = p(D|H1) * P(H1) + p(D}H2) * P(H2)
# p(D) = 0.95 * 0.222 + 0.2 * 0.778 =
0.95 * 0.222 + 0.2 * 0.778
# p(H1|D) = 0.95 * 0.222 / 0.3665
0.95 * 0.222 / 0.3665
# P(pregnant | test positive twice)
# D = test positive twice
# H1 = pregant
# H2 = non-pregnant
# P(pregnant | test positive twice) = p(H1|D) ?
# p(H1) = 0.222
# p(H2) = 1 - 0.222 = 0.778
# p(D|H1) = 0.95 * 0.95 =
0.95 * 0.95
# p(D|H2) = 0.2 * 0.2 = 0.04
# p(D) = p(D|H1) * P(H1) + p(D|H2) * p(H2) =
0.9025 * 0.222 + 0.04 * 0.778
# p(D|H1) * p(H1) = p(H1|D) * p(D)
# p(H1|D) = 0.9025 * 0.222 / 0.231475 =
0.9025 * 0.222 / 0.231475
# 其中A、B分别表示两组数据中某一发生和不发生的次数，
# C、D分别表示另一组数据中该发生和不发生的次数。
# 在流行病学研究中，OR值（odds ratio）是病例对照研究中的一个常用指标，
# 它指的是病例组中暴露人数与非暴露人数的比值除以对照组中暴露人数与非暴露人数的比值。
# OR值的具体意义如下：如果OR值等于1，表示该因素对疾病的发生不起作用；
# OR值大于1，表示该因素是危险因素；OR值小于1，表示该因素是保护因素。
#               pregnant   non-pregnant
# positive        0.95            0.2
# negative        0.05            0.8
# odds ratio = (0.95 / 0.05) / (0.2 / 0.8) =
(0.95 / 0.05) / (0.2 / 0.8)
# 其中A、B分别表示两组数据中某一发生和不发生的次数，
# C、D分别表示另一组数据中该发生和不发生的次数。
# 在流行病学研究中，OR值（odds ratio）是病例对照研究中的一个常用指标，
# 它指的是病例组中暴露人数与非暴露人数的比值除以对照组中暴露人数与非暴露人数的比值。
# OR值的具体意义如下：如果OR值等于1，表示该因素对疾病的发生不起作用；
# OR值大于1，表示该因素是危险因素；OR值小于1，表示该因素是保护因素。
#               test positive   test negative
# pregnant            0.95            0.05
# non-pregnant        0.2             0.8
# odds ratio = (0.95/0.2) / (0.05/0.8) =
(0.95/0.2) / (0.05/0.8)
# I feel the following is the correct format.
#               pregnant   non-pregnant
# positive        0.95            0.2
# negative        0.05            0.8
# odds ratio = (0.95/0.05) / (0.2/0.8) =
(0.95/0.05) / (0.2/0.8)
library(readr)
library(dplyr)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(tidyr)
setwd("E:\A大学\大二下\ADS2\W27 5.13-5.17 Bootstrapping")
data = read.table("Reporter_assay_4-1-15.txt")
setwd("E:\A大学\大二下\ADS2\W27 5.13-5.17 Bootstrapping")
setwd("E:\\A大学\\大二下\\ADS2\\W27 5.13-5.17 Bootstrapping")
data = read.table("Reporter_assay_4-1-15.txt")
data = read.table("Reporter_assay_4-1-15.txt")
head(data)
data = read.table("Reporter_assay_4-1-15.txt", head = T)
head(data)
nrow(data)
data
data$Category = as.factor(data$Category)
g = ggplot(data, mapping = aes(x = ave, group = Category)) +
geom_boxplot()
g
g
g = ggplot(data, mapping = aes(x = ave, group = Category)) +
geom_boxplot()
g
g = ggplot(data, mapping = aes(x = ave, group = Category)) +
geom_boxplot()
g
g = ggplot(data, mapping = aes(x = Category, y = ave, group = Category)) +
geom_boxplot()
g
g = ggplot(data, mapping = aes(x = Category, y = ave, group = Category)) +
geom_boxplot(mapping = aes(color = Category))
g
# Lets look first at the epigenetic status of these enhancers.
# Can you calculate the median difference between
# those which are marked as active and those which are marked as repressed?
head(data)
data$Epigenetic_status = as.factor(data$Epigenetic_status)
data$Transcription_status = as.factor(data$Transcription_status)
summary(data)
ave_active = median(data[data$Epigenetic_status == "Active", ])
ave_active = median(data$ave[data$Epigenetic_status == "Active", ])
ave_active = median(data$ave[data$Epigenetic_status == "Active"])
ave_repressed = median(data$ave[data$Epigenetic_status == "Repressed"])
abs(ave_active - ave_repressed)
pool = data$Epigenetic_status
n1 = sum(data$Epigenetic_status == "Active")
n1
n2 = sum(data$Epigenetic_status == "Active")
n2 = sum(data$Epigenetic_status == "Repressed")
n2
bootstrap = function(){
sample1 = sample(data = pool, size = n1, replace = T)
sample2 = sample(data = pool, size = n2, replace = T)
return (abs(median(sample1) - median(sample2)))
}
bootstrap()
bootstrap
bootstrap()
x
x = bootstrap()
pool = data$Epigenetic_status
n1 = sum(data$Epigenetic_status == "Active")
bootstrap = function(){
sample1 = sample(data = pool, size = n1, replace = T)
sample2 = sample(data = pool, size = n2, replace = T)
return (abs(median(sample1) - median(sample2)))
}
bootsrap
bootsrap()
bootstrap()
bootstrap = function(){
sample1 = sample(pool, size = n1, replace = T)
sample2 = sample(pool, size = n2, replace = T)
return (abs(median(sample1) - median(sample2)))
}
bootstrap()
pool = data$ave
bootstrap()
abs(ave_active - ave_repressed)
sample_dif = rep(bootstrap(), 1000)
hist(sample_dif)
head(sample_dif)
tail(sample_dif)
sample_dif = apply(bootstrap(), 1000)
sample_dif = sapply(bootstrap(), 1000)
sample_dif = c(sample_dif, bootstrap())
for(rep in 1:1000)
sample_dif = c(sample_dif, bootstrap())
hist(sample_dif)
for(rep in 1:1000)
sample_dif = c(sample_dif, bootstrap())
hist(sample_dif)
for(rep in 1:10000)
sample_dif = c(sample_dif, bootstrap())
hist(sample_dif)
for(rep in 1:10000)
sample_dif = c(sample_dif, bootstrap())
hist(sample_dif)
observed = abs(ave_active - ave_repressed)
observed_dif = abs(ave_active - ave_repressed)
sum(sample_dif > observed_dif)
sum(sample_dif > observed_dif) / length(sample_dif)
sum(sample_dif > observed_dif) / length(sample_dif) < 0.05
sum(sample_dif > observed_dif) / length(sample_dif) < 0.05
for(rep in 1:1000)
sample_dif = c(sample_dif, bootstrap())
hist(sample_dif)
# Task 4. Make a statistical inference Where does your observed difference fall
# on this distribution? Do you think there is a significant difference between
# enhancer activity across groups with different epigenetic marks?
sum(sample_dif > observed_dif) / length(sample_dif) < 0.05
for(rep in 1:100)
sample_dif = c(sample_dif, bootstrap())
hist(sample_dif)
# Task 4. Make a statistical inference Where does your observed difference fall
# on this distribution? Do you think there is a significant difference between
# enhancer activity across groups with different epigenetic marks?
sum(sample_dif > observed_dif) / length(sample_dif) < 0.05
for(rep in 1:10)
sample_dif = c(sample_dif, bootstrap())
hist(sample_dif)
# Task 4. Make a statistical inference Where does your observed difference fall
# on this distribution? Do you think there is a significant difference between
# enhancer activity across groups with different epigenetic marks?
sum(sample_dif > observed_dif) / length(sample_dif) < 0.05
n1 = sum(data$Transcription_status == "Active")
n2 = sum(data$Transcription_status == "None")
n1
n2
work()
work = function(){
pool = data$ave
for(rep in 1:10000)
sample_dif = c(sample_dif, bootstrap())
# hist(sample_dif)
print(sum(sample_dif > observed_dif) / length(sample_dif) < 0.05)
}
pool = data$ave
work = function(){
sample_dif = {}
for(rep in 1:10000)
sample_dif = c(sample_dif, bootstrap())
# hist(sample_dif)
print(sum(sample_dif > observed_dif) / length(sample_dif) < 0.05)
}
work()
data = read.table("movie_data.txt", head = T)
head(data)
data
head(data2)
data2
data2 = read.table("movie_data.txt", head = T)
head(data2)
data2
sum(data2$students)
n = sum(data2$students)
n = sum(data2$students)
vec = {}
for(i in 1:nrow(data2))
vec = c(vec, rep(data2$genre[i], data2$students[i]))
# Task 3. Generate a confidence interval by bootstrapping many times.
for(i in 1:nrow(data2)){
list = {}
for(rep in 1:1000){
sample = sample(vec, size = n, replace = T)
list = c(list, sum(sample == data2$genre[i]))
}
data2$confidence_interval_lb = quantile(list, 0.025)
data2$confidence_interval_rb = qunatile(list, 0.975)
}
n = sum(data2$students)
vec = {}
for(i in 1:nrow(data2))
vec = c(vec, rep(data2$genre[i], data2$students[i]))
# Task 3. Generate a confidence interval by bootstrapping many times.
for(i in 1:nrow(data2)){
list = {}
for(rep in 1:1000){
sample = sample(vec, size = n, replace = T)
list = c(list, sum(sample == data2$genre[i]))
}
data2$confidence_interval_lb = quantile(list, 0.025)
data2$confidence_interval_rb = quantile(list, 0.975)
}
data2
# Task 3. Generate a confidence interval by bootstrapping many times.
for(i in 1:nrow(data2)){
list = {}
for(rep in 1:1000){
sample = sample(vec, size = n, replace = T)
list = c(list, sum(sample == data2$genre[i]))
}
data2$confidence_interval_lb[i] = quantile(list, 0.025)
data2$confidence_interval_rb[i] = quantile(list, 0.975)
}
data2
for(i in 1:nrow(data2)){
list = {}
for(rep in 1:1000){
sample = sample(vec, size = n, replace = T)
list = c(list, sum(sample == data2$genre[i]))
}
data2$ci_lower[i] = quantile(list, 0.025)
data2$ci_upper[i] = quantile(list, 0.975)
}
data2
data2 = read.table("movie_data.txt", head = T)
n = sum(data2$students)
vec = {}
for(i in 1:nrow(data2))
vec = c(vec, rep(data2$genre[i], data2$students[i]))
# Task 3. Generate a confidence interval by bootstrapping many times.
for(i in 1:nrow(data2)){
list = {}
for(rep in 1:1000){
sample = sample(vec, size = n, replace = T)
list = c(list, sum(sample == data2$genre[i]))
}
data2$ci_lower[i] = quantile(list, 0.025)
data2$ci_upper[i] = quantile(list, 0.975)
}
data2
g2 = ggplot(data2, mapping = aes(x = genre, y = students)) +
geom_point() +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 0.2, color = "red")
g2 = ggplot(data2, mapping = aes(x = genre, y = students)) +
geom_point(aes(color = genre)) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 0.2, color = genre)
g2 = ggplot(data2, mapping = aes(x = genre, y = students)) +
geom_point(aes(color = genre)) +
geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper, color = genre), width = 0.2)
g2
observed_dif = ave_active - ave_repressed
observed_dif
bootstrap = function(){
sample1 = sample(pool, size = n1, replace = T)
sample2 = sample(pool, size = n2, replace = T)
return median(sample1) - median(sample2)
pool = data$ave
for(rep in 1:10000)
sample_dif = c(sample_dif, bootstrap())
bootstrap = function(){
sample1 = sample(pool, size = n1, replace = T)
sample2 = sample(pool, size = n2, replace = T)
return (median(sample1) - median(sample2))
}
pool = data$ave
for(rep in 1:10000)
sample_dif = c(sample_dif, bootstrap())
data = read.table("Reporter_assay_4-1-15.txt", head = T)
data$Category = as.factor(data$Category)
pool = data$ave
for(rep in 1:10000)
sample_dif = c(sample_dif, bootstrap())
hist(sample_dif)
sum(sample_dif > observed_dif) / length(sample_dif) < 0.05
# Task 4. Make a statistical inference Where does your observed difference fall
# on this distribution? Do you think there is a significant difference between
# enhancer activity across groups with different epigenetic marks?
sum(sample_dif > observed_dif) / length(sample_dif)
pool = data$ave
for(rep in 1:10000)
sample_dif = c(sample_dif, bootstrap())
sample_dif = sample_dif[sample$dif > 0]
pool = data$ave
for(rep in 1:10000)
sample_dif = c(sample_dif, bootstrap())
sample_dif = sample_dif[sample_dif > 0]
hist(sample_dif)
sum(sample_dif > observed_dif) / length(sample_dif)
sum(sample_dif > observed_dif) / length(sample_dif) < 0.05
pool1 = data$ave[data$Epigenetic_status == "Active"]
pool2 = data$ave[data$Epigenetic_status == "Repressed"]
for(rep in 1:10000)
sample_dif = c(sample_dif, bootstrap())
hist(sample_dif)
bootstrap = function(){
sample1 = sample(pool1, size = n1, replace = T)
sample2 = sample(pool2, size = n2, replace = T)
return (median(sample1) - median(sample2))
}
bootstrap()
pool1 = data$ave[data$Epigenetic_status == "Active"]
pool2 = data$ave[data$Epigenetic_status == "Repressed"]
for(rep in 1:10000)
sample_dif = c(sample_dif, bootstrap())
hist(sample_dif)
sum(sample_dif > observed_dif) / length(sample_dif)
sum(sample_dif > observed_dif) / length(sample_dif) < 0.05
for(i in 1:nrow(data2)){
print(data2$students - data2$ci_lower)
print(data2$ci_upper - data2$students)
}
print(data2$ci_upper - data2$students)
print(data2$students - data2$ci_lower)
print(data2$ci_upper - data2$students)
