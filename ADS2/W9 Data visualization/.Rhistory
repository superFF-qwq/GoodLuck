#sum(a)/length(a)
#png("q4.png")
#hist(a)
#dev.off()
simulate_class=function(n,fullmark){
class=runif(n,0,fullmark)
for(i in 1:length(class))
class[i]=pnorm(class[i],50,10)*100 #normative
mean1=sum(class)/length(class)
#print(c)
mean1
}
times=1000
a2=array(dim=times)
b2=array(dim=times)
tot=0
for(i in 1:times){
a2[i]=simulate_class(26,80)
b2[i]=simulate_class(26,100)
if(a2[i]>b2[i])
tot=tot+1
}
p=tot/times
p
#getwd()
setwd("E:\\Ae$'e-&\\e$'d:d8
\\ADS2\\week10 11.20-11.26")
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
library(rmarkdown)
library(knitr)
library(tidyverse)
library(cowplot)
setwd("C:\Users\Lenovo\Desktop\2118")
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
library(rmarkdown)
library(knitr)
library(tidyverse)
library(cowplot)
setwd("C:\\Users\\Lenovo\\Desktop\\2118")
swimming = read.table("swimming.txt", sep = '\t', header = T)
head(swimming)
knitr::opts_chunk$set(echo = TRUE)
library(tinytex)
library(rmarkdown)
library(knitr)
library(tidyverse)
library(cowplot)
setwd("C:\\Users\\Lenovo\\Desktop\\2118")
swimming = read.table("swimming.txt", sep = '\t', header = T)
head(swimming)
swimming = read.table("swimming.txt", sep = '\t', header = T)
# head(swimming)
summary(swimming)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tinytex)
library(rmarkdown)
library(knitr)
library(tidyverse)
library(cowplot)
setwd("C:\\Users\\Lenovo\\Desktop\\2118")
swimming = read.table("swimming.txt", sep = '\t', header = T)
# head(swimming)
summary(swimming)
swimming = read.table("swimming.txt", sep = '\t', header = T)
# head(swimming)
summary(swimming)
str(swimming)
swim = read.table("swimming.txt", sep = '\t', header = T)
# head(swimming)
summary(swim)
str(swim)
anyNA(swim)
anyNA(swim)
which(!complete.cases(swim))
anyNA(swim)
which(!complete.cases(swim))
length(rownames(swim[swim$names=="", ]))
length(rownames(swim[swim$before_minutes=="", ]))
length(rownames(swim[swim$before_seconds=="", ]))
length(rownames(swim[swim$after_minutes=="", ]))
length(rownames(swim[swim$after_seconds=="", ]))
which(duplicated(swim))
str(swim)
before_time = swim$before_minutes * 60 + swim$before_seconds
swim2 = data.frame(swim, before_time)
before_time = swim$before_minutes * 60 + swim$before_seconds
swim2 = data.frame(swim, before_time)
head(swim2)
before_time = swim$before_minutes * 60 + swim$before_seconds
before_time = as.numeric(before_time)
swim2 = data.frame(swim, before_time)
head(swim2)
before_time = swim$before_minutes * 60 + swim$before_seconds
before_time = as.integer(before_time)
swim2 = data.frame(swim, before_time)
head(swim2)
swim[swim$before_minutes < 0 | swim$after_minutes < 0 |
swim$before_seconds < 0 | swim$after_seconds < 0 , ]
before_time = swim$before_minutes * 60 + swim$before_seconds
before_time = as.integer(before_time)
after_time = swim$after_minutes * 60 + swim$after_seconds
after_time = as.integer(after_time)
hist(before_time)
# swim2 = data.frame(swim, before_time, after_time)
# head(swim2)
swim[swim$before_minutes < 0 | swim$after_minutes < 0 |
swim$before_seconds < 0 | swim$after_seconds < 0 , ]
before_time = swim$before_minutes * 60 + swim$before_seconds
before_time = as.integer(before_time)
after_time = swim$after_minutes * 60 + swim$after_seconds
after_time = as.integer(after_time)
hist(before_time, xlab = "before time (s)")
# swim2 = data.frame(swim, before_time, after_time)
# head(swim2)
swim[swim$before_minutes < 0 | swim$after_minutes < 0 |
swim$before_seconds < 0 | swim$after_seconds < 0 , ]
before_time = swim$before_minutes * 60 + swim$before_seconds
before_time = as.integer(before_time)
after_time = swim$after_minutes * 60 + swim$after_seconds
after_time = as.integer(after_time)
hist(before_time, xlab = "before time (s)", main = NULL)
# swim2 = data.frame(swim, before_time, after_time)
# head(swim2)
swim[swim$before_minutes < 0 | swim$after_minutes < 0 |
swim$before_seconds < 0 | swim$after_seconds < 0 , ]
before_time = swim$before_minutes * 60 + swim$before_seconds
before_time = as.integer(before_time)
after_time = swim$after_minutes * 60 + swim$after_seconds
after_time = as.integer(after_time)
hist(before_time, xlab = "before time (s)")
hist(after_time, xlab = "after time (s)")
# swim2 = data.frame(swim, before_time, after_time)
# head(swim2)
swim[swim$before_minutes < 0 | swim$after_minutes < 0 |
swim$before_seconds < 0 | swim$after_seconds < 0 , ]
before_time = swim$before_minutes * 60 + swim$before_seconds
before_time = as.integer(before_time)
after_time = swim$after_minutes * 60 + swim$after_seconds
after_time = as.integer(after_time)
hist(before_time, xlab = "before time (s)")
hist(after_time, xlab = "after time (s)")
hist(after_time - before_time, xlab = "improvement time(s)",
main = "Histogram of the improvement time")
# swim2 = data.frame(swim, before_time, after_time)
# head(swim2)
t.test(before_time, after_time, paired = T)
t.test(before_time, after_time, paired = T, alternative = "greater")
t.test(after_time, before_time, paired = T, alternative = "greater")
swim[swim$before_minutes < 0 | swim$after_minutes < 0 |
swim$before_seconds < 0 | swim$after_seconds < 0 , ]
before_time = swim$before_minutes * 60 + swim$before_seconds
before_time = as.integer(before_time)
after_time = swim$after_minutes * 60 + swim$after_seconds
after_time = as.integer(after_time)
hist(before_time, xlab = "before time (s)")
hist(after_time, xlab = "after time (s)")
hist(before_time - after_time, xlab = "improvement time(s)",
main = "Histogram of the improvement time")
swim2 = data.frame(swim, before_time, after_time)
# head(swim2)
t.test(after_time, before_time, paired = T, alternative = "less")
hosp = read.csv("hospital_admissions.csv")
head(hosp)
hosp = read.csv("hospital_admissions.csv")
head(hosp)
str(hosp)
hosp = read.csv("hospital_admissions.csv")
head(hosp)
str(hosp)
hosp.weekday = as.factor(hosp.weekday)
hosp = read.csv("hospital_admissions.csv")
head(hosp)
str(hosp)
hosp$weekday = as.factor(hosp$weekday)
aggregate(hosp$Monday, by=list(Group=hosp$Category), FUN=sum)
hosp = read.csv("hospital_admissions.csv")
head(hosp)
str(hosp)
hosp$weekday = as.factor(hosp$weekday)
aggregate(hosp$patients_per_hour, by=list(Group=hosp$weekday), FUN=sum)
hosp = read.csv("hospital_admissions.csv")
head(hosp)
str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
aggregate(hosp$patients_per_hour, by=list(hosp$week, hosp$weekday), FUN=sum)
hosp = read.csv("hospital_admissions.csv")
head(hosp)
str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
str(hosp1)
hosp = read.csv("hospital_admissions.csv")
head(hosp)
str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
str(hosp1)
summary(hosp1)
hosp = read.csv("hospital_admissions.csv")
head(hosp)
str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp2)[1] = "weekday"
hosp = read.csv("hospital_admissions.csv")
head(hosp)
str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
str(hosp1)
summary(hosp1)
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1,
mapping = aes(x = week, y = patients, group = weekday)
)
g2 = g2 + ggboxplot(mapping = aes(color = weekday))
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1,
mapping = aes(x = week, y = patients, group = weekday)
)
g2 = g2 + geom_boxplot(mapping = aes(color = weekday))
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1,
mapping = aes(x = week, y = patients, group = weekday)
)
g2 = g2 + geom_boxplot(mapping = aes(color = weekday))
g2
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1,
mapping = aes(x = week, y = patients, color = weekday)
)
g2 = g2 + geom_boxplot()
g2 = g2 + scale_color_manual(values = c("orange", "purple"))
g2
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1,
mapping = aes(x = week, y = patients, color = weekday)
)
g2 = g2 + geom_histogram()
g2 = g2 + scale_color_manual(values = c("orange", "purple"))
g2
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1,
mapping = aes(x = week, y = patients, color = weekday)
)
g2 = g2 + geom_histogram(position = "identity")
g2 = g2 + scale_color_manual(values = c("orange", "purple"))
g2
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1,
mapping = aes(x = week, y = patients, color = weekday)
)
g2 = g2 + geom_histogram(position = "stack")
g2 = g2 + scale_color_manual(values = c("orange", "purple"))
g2
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1,
mapping = aes(x = week, y = patients, color = weekday)
)
g2 = g2 + geom_bar(position = "identity")
g2 = g2 + scale_color_manual(values = c("orange", "purple"))
g2
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1,
mapping = aes(x = week, y = patients, color = weekday)
)
g2 = g2 + geom_bar(position = "stack",
mapping = aes(fill = weekday))
g2 = g2 + scale_color_manual(values = c("orange", "purple"))
g2
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1,
mapping = aes(x = week, y = patients, color = weekday)
)
g2 = g2 + geom_bar(stat="identity")
g2 = g2 + scale_color_manual(values = c("orange", "purple"))
g2
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1[hosp1$weekday == "Monday",],
mapping = aes(x = week, y = patients)
)
g2 = g2 + geom_bar(stat="identity")
g2 = g2 + scale_color_manual(values = "orange")
g2
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1[hosp1$weekday == "Monday",],
mapping = aes(x = week, y = patients)
)
g2 = g2 + geom_bar(stat="identity", color = "orange")
#g2 = g2 + scale_color_manual(values = )
g2
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2 = ggplot(data = hosp1[hosp1$weekday == "Monday",],
mapping = aes(x = week, y = patients)
)
g2 = g2 + geom_bar(stat="identity", fill = "orange")
#g2 = g2 + scale_color_manual(values = )
g2
hosp = read.csv("hospital_admissions.csv")
# head(hosp)
# str(hosp)
hosp$week = as.factor(hosp$week)
hosp$weekday = as.factor(hosp$weekday)
hosp1 = aggregate(hosp$patients_per_hour,
by = list(hosp$week, hosp$weekday),
FUN = sum)
names(hosp1)[1] = "week"
names(hosp1)[2] = "weekday"
names(hosp1)[3] = "patients"
# str(hosp1)
# summary(hosp1)
g2.1 = ggplot(data = hosp1[hosp1$weekday == "Monday",],
mapping = aes(x = week, y = patients)
)
g2.1 = g2.1 + geom_bar(stat="identity", fill = "orange")
g2.1
g2.2 = ggplot(data = hosp1[hosp1$weekday == "Sunday",],
mapping = aes(x = week, y = patients)
)
g2.2 = g2.2 + geom_bar(stat="identity", fill = "purple")
g2.2
hosp1[hosp1$weekday == "Monday",]$week == hosp1[hosp1$weekday == "Sunday",]$week
wilcox.test(, alternative = 'two.sided',paired = T)
hosp1[hosp1$weekday == "Monday",]$week == hosp1[hosp1$weekday == "Sunday",]$week
#wilcox.test(, alternative = 'two.sided',paired = T)
# hosp1[hosp1$weekday == "Monday",]$week ==
# hosp1[hosp1$weekday == "Sunday",]$week
wilcox.test(, alternative = 'two.sided',paired = T)
# hosp1[hosp1$weekday == "Monday",]$week ==
# hosp1[hosp1$weekday == "Sunday",]$week
wilcox.test(hosp1[hosp1$weekday == "Monday",]$patients,
hosp1[hosp1$weekday == "Sunday",]$patients,
alternative = 'two.sided',paired = T)
# hosp1[hosp1$weekday == "Monday",]$week ==
# hosp1[hosp1$weekday == "Sunday",]$week
wilcox.test(hosp1[hosp1$weekday == "Monday",]$patients,
hosp1[hosp1$weekday == "Sunday",]$patients,
alternative = 'greater',paired = T)
